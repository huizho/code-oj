给定一个字符串，请你找出其中不含有重复字符的最长子串的长度。
示例 1:
输入: "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。

示例 2:
输入: "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。

示例 3:
输入: "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
     请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。

class Solution {
    public int lengthOfLongestSubstring(String s) {
        //滑动窗口  HashSet
        int len = s.length();
        if(len == 0) return 0;
        Set<Character> se = new HashSet<>();
        int ans = 0,i = 0,j = 0;
        while(i < len && j < len ) {
            if(!se.contains(s.charAt(i))) {
                se.add(s.charAt(i++));
                ans = Math.max(ans,i - j);
            }
            else {
                se.remove(s.charAt(j++));    
            }
        }
        return ans;
    }
}
