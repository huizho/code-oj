给定一个二叉树，判断其是否是一个有效的二叉搜索树。

假设一个二叉搜索树具有如下特征：

    节点的左子树只包含小于当前节点的数。
    节点的右子树只包含大于当前节点的数。
    所有左子树和右子树自身必须也是二叉搜索树。
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isValidBST(TreeNode root) {
        return isBst(root,null,null);
    }                          //         下界   上界    
    private boolean isBst(TreeNode r,Integer lo,Integer up) {
        if(r == null) return true;
        int val = r.val; //违反
        if(lo != null && lo >= val) return false;
        if(up != null && up <= val) return false;
        //递归
        if(!isBst(r.right,val,up)) return false;
        if(!isBst(r.left,lo,val)) return false;
        return true;
     }
}
