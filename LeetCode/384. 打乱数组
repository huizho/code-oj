打乱一个没有重复元素的数组。
示例:
// 以数字集合 1, 2 和 3 初始化数组。
int[] nums = {1,2,3};
Solution solution = new Solution(nums);

// 打乱数组 [1,2,3] 并返回结果。任何 [1,2,3]的排列返回的概率应该相同。
solution.shuffle();

// 重设数组到它的初始状态[1,2,3]。
solution.reset();

// 随机返回数组[1,2,3]打乱后的结果。
solution.shuffle();

class Solution {
    private int[] list;
    private Random rand = new Random();
    public Solution(int[] nums) {
        list = nums;
    }
    
    /** Resets the array to its original configuration and return it. */
    public int[] reset() {
        return list;
    }
    
    /** Returns a random shuffling of the array. */
    public int[] shuffle() {
        int[] a = list.clone();
//思路是在前n-1张牌洗好的情况下，第n张牌随机与前n-1张牌的其中一张牌交换，或者不换，
        for(int i = 1; i < list.length; i++) {
            int r = rand.nextInt(i+1);
            if(r != i) {
                int t = a[r];
                a[r] = a[i];
                a[i] = t;
            }
        }
        return a;
    }
}
/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(nums);
 * int[] param_1 = obj.reset();
 * int[] param_2 = obj.shuffle();
 */
