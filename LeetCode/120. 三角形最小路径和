给定一个三角形，找出自顶向下的最小路径和。每一步只能移动到下一行中相邻的结点上。

例如，给定三角形：

[
     [2],
    [3,4],
   [6,5,7],
  [4,1,8,3]
]

自顶向下的最小路径和为 11（即，2 + 3 + 5 + 1 = 11）。

class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        int n = triangle.size();
        if(triangle == null || n == 0) 
            return 0;
        int[] dp = new int[n+1];
        for(int i = n-1; i >= 0; i--) {
            List<Integer> cur = triangle.get(i);
            for(int j = 0; j < cur.size(); j++) {
                //这里的dp[j] 使用的时候默认是上一层的，赋值之后变成当前层
                dp[j] = Math.min(dp[j],dp[j+1]) + cur.get(j);
            }
        }
        return dp[0];
    }
}
