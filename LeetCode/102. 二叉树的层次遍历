给定一个二叉树，返回其按层次遍历的节点值。 （即逐层地，从左到右访问所有节点）。

例如:
给定二叉树: [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7

返回其层次遍历结果：

[
  [3],
  [9,20],
  [15,7]
]

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> r = new ArrayList<>();
        if(root == null) return r;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        int lev = 0;
        while(!q.isEmpty()) {
            r.add(new ArrayList<Integer>());
            int len = q.size();
            for(int i = 0; i < len; i++) {//添加当前层
                TreeNode t = q.remove();
                r.get(lev).add(t.val);
                if(t.left != null) q.add(t.left);//下一层
                if(t.right != null) q.add(t.right);   
            }
            lev++;//层数
        }
        return r;
    }
}
